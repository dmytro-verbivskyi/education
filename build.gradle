buildscript {
    ext {
        appName = 'Education Project'
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'application'
    id 'jacoco'
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release" }
}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
    compile.exclude module: 'spring-boot-starter-jdbc'

    integrationTestCompile.extendsFrom implementation
    integrationTestRuntime.extendsFrom runtime
}

group 'com.dverbivskyi'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.11
targetCompatibility = 1.11

dependencies {
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: '2.5.11'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.213'
    compile group: 'com.github.derjust', name: 'spring-data-dynamodb', version: '5.1.0'
    compile group: 'com.h2database', name: 'h2'

//    checkstyle group: 'com.puppycrawl.tools', name: 'checkstyle', version: '8.8'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.9.0'
    testCompile group: 'com.typesafe.akka', name: 'akka-testkit_2.12', version: '2.5.11'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.+'
    // SQLite4Java, required by local DynamoDB
    testCompile group: 'com.almworks.sqlite4java', name: 'sqlite4java', version: '1.0.392'
}

task copyNativeDependencies(type: Copy) {
    doLast {
        println 'Copy SQLite4Java dynamic libs'
    }

    from(configurations.compile + configurations.testCompile) {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}

test {
    dependsOn copyNativeDependencies
    systemProperty "java.library.path", 'build/libs'

    testLogging {
        exceptionFormat = 'full'
        events = ["skipped", "failed"]
    }
}

tasks.withType(Test) {
    ext.failedTests = []

    afterTest {descriptor, result ->
        if (result.resultType == TestResult.ResultType.FAILURE) {
            failedTests << "${descriptor.className} > ${descriptor.name}"
        }
    }

    afterSuite {suite, result ->
        if (!suite.parent && !failedTests.empty) {
            println "\nFailed tests for ${project.name}:"
            failedTests.eachWithIndex {failedTest, index ->
                println "${++index}. ${failedTest}"
            }
        }
    }
}
//
//checkstyle {
//    configFile file("config/checkstyle/checkstyle.xml")
//}
//checkstyleMain {
//    source = 'src/main/java'
//}
//checkstyleTest {
//    source = 'src/test/java'
//}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

group 'com.dverbivskyi'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release" }
}

dependencies {
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: '2.5.11'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: '1.11.213'
    compile group: 'com.github.derjust', name: 'spring-data-dynamodb', version: '5.0.2'
    compile group: 'com.h2database', name: 'h2'
    compile group: 'org.apache.commons', name: 'commons-lang3'

    checkstyle group: 'com.puppycrawl.tools', name: 'checkstyle', version: '8.8'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.9.0'
    testCompile group: 'com.typesafe.akka', name: 'akka-testkit_2.12', version: '2.5.11'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'com.amazonaws', name: 'DynamoDBLocal', version: '1.+'
    // SQLite4Java, required by local DynamoDB
    testCompile group: 'com.almworks.sqlite4java', name: 'sqlite4java', version: '1.0.392'
}

task copyNativeDependencies(type: Copy) {
    doLast {
        println 'Copy SQLite4Java dynamic libs'
    }

    from(configurations.compile + configurations.testCompile) {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}

test {
    dependsOn copyNativeDependencies
    systemProperty "java.library.path", 'build/libs'

    testLogging {
        exceptionFormat = 'full'
        events = ["skipped", "failed"]
    }
}

checkstyle {
    configFile file("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source = 'src/main/java'
}
checkstyleTest {
    source = 'src/test/java'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}